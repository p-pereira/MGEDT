Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> result
Rule 1     result -> npwhere ( x [ idx ] comparison ( value ) , node , node )
Rule 2     node -> result
Rule 3     node -> leaf
Rule 4     leaf -> none
Rule 5     leaf -> verylow
Rule 6     leaf -> low
Rule 7     leaf -> medium
Rule 8     leaf -> high
Rule 9     digits -> digits digit
Rule 10    digits -> digit
Rule 11    digit -> NUMBER
Rule 12    comparison -> = =
Rule 13    comparison -> <
Rule 14    comparison -> >
Rule 15    comparison -> < =
Rule 16    idx -> idapplication
Rule 17    idx -> idoperator
Rule 18    idx -> idaffmanager
Rule 19    idx -> idbrowser
Rule 20    idx -> idpartner
Rule 21    idx -> idcampaign
Rule 22    idx -> idverticaltype
Rule 23    idx -> regioncontinent
Rule 24    idx -> country_name
Rule 25    idx -> accmanager
Rule 26    value -> digits . digits
Rule 27    value -> digits

Terminals, with rules where they appear

(                    : 1 1
)                    : 1 1
,                    : 1 1
.                    : 26
<                    : 13 15
=                    : 12 12 15
>                    : 14
NUMBER               : 11
[                    : 1
]                    : 1
accmanager           : 25
country_name         : 24
error                : 
high                 : 8
idaffmanager         : 18
idapplication        : 16
idbrowser            : 19
idcampaign           : 21
idoperator           : 17
idpartner            : 20
idverticaltype       : 22
low                  : 6
medium               : 7
none                 : 4
npwhere              : 1
regioncontinent      : 23
verylow              : 5
x                    : 1

Nonterminals, with rules where they appear

comparison           : 1
digit                : 9 10
digits               : 9 26 26 27
idx                  : 1
leaf                 : 3
node                 : 1 1
result               : 2 0
value                : 1

Parsing method: LALR

state 0

    (0) S' -> . result
    (1) result -> . npwhere ( x [ idx ] comparison ( value ) , node , node )

    npwhere         shift and go to state 2

    result                         shift and go to state 1

state 1

    (0) S' -> result .



state 2

    (1) result -> npwhere . ( x [ idx ] comparison ( value ) , node , node )

    (               shift and go to state 3


state 3

    (1) result -> npwhere ( . x [ idx ] comparison ( value ) , node , node )

    x               shift and go to state 4


state 4

    (1) result -> npwhere ( x . [ idx ] comparison ( value ) , node , node )

    [               shift and go to state 5


state 5

    (1) result -> npwhere ( x [ . idx ] comparison ( value ) , node , node )
    (16) idx -> . idapplication
    (17) idx -> . idoperator
    (18) idx -> . idaffmanager
    (19) idx -> . idbrowser
    (20) idx -> . idpartner
    (21) idx -> . idcampaign
    (22) idx -> . idverticaltype
    (23) idx -> . regioncontinent
    (24) idx -> . country_name
    (25) idx -> . accmanager

    idapplication   shift and go to state 7
    idoperator      shift and go to state 8
    idaffmanager    shift and go to state 9
    idbrowser       shift and go to state 10
    idpartner       shift and go to state 11
    idcampaign      shift and go to state 12
    idverticaltype  shift and go to state 13
    regioncontinent shift and go to state 14
    country_name    shift and go to state 15
    accmanager      shift and go to state 16

    idx                            shift and go to state 6

state 6

    (1) result -> npwhere ( x [ idx . ] comparison ( value ) , node , node )

    ]               shift and go to state 17


state 7

    (16) idx -> idapplication .

    ]               reduce using rule 16 (idx -> idapplication .)


state 8

    (17) idx -> idoperator .

    ]               reduce using rule 17 (idx -> idoperator .)


state 9

    (18) idx -> idaffmanager .

    ]               reduce using rule 18 (idx -> idaffmanager .)


state 10

    (19) idx -> idbrowser .

    ]               reduce using rule 19 (idx -> idbrowser .)


state 11

    (20) idx -> idpartner .

    ]               reduce using rule 20 (idx -> idpartner .)


state 12

    (21) idx -> idcampaign .

    ]               reduce using rule 21 (idx -> idcampaign .)


state 13

    (22) idx -> idverticaltype .

    ]               reduce using rule 22 (idx -> idverticaltype .)


state 14

    (23) idx -> regioncontinent .

    ]               reduce using rule 23 (idx -> regioncontinent .)


state 15

    (24) idx -> country_name .

    ]               reduce using rule 24 (idx -> country_name .)


state 16

    (25) idx -> accmanager .

    ]               reduce using rule 25 (idx -> accmanager .)


state 17

    (1) result -> npwhere ( x [ idx ] . comparison ( value ) , node , node )
    (12) comparison -> . = =
    (13) comparison -> . <
    (14) comparison -> . >
    (15) comparison -> . < =

    =               shift and go to state 19
    <               shift and go to state 20
    >               shift and go to state 21

    comparison                     shift and go to state 18

state 18

    (1) result -> npwhere ( x [ idx ] comparison . ( value ) , node , node )

    (               shift and go to state 22


state 19

    (12) comparison -> = . =

    =               shift and go to state 23


state 20

    (13) comparison -> < .
    (15) comparison -> < . =

    (               reduce using rule 13 (comparison -> < .)
    =               shift and go to state 24


state 21

    (14) comparison -> > .

    (               reduce using rule 14 (comparison -> > .)


state 22

    (1) result -> npwhere ( x [ idx ] comparison ( . value ) , node , node )
    (26) value -> . digits . digits
    (27) value -> . digits
    (9) digits -> . digits digit
    (10) digits -> . digit
    (11) digit -> . NUMBER

    NUMBER          shift and go to state 28

    value                          shift and go to state 25
    digits                         shift and go to state 26
    digit                          shift and go to state 27

state 23

    (12) comparison -> = = .

    (               reduce using rule 12 (comparison -> = = .)


state 24

    (15) comparison -> < = .

    (               reduce using rule 15 (comparison -> < = .)


state 25

    (1) result -> npwhere ( x [ idx ] comparison ( value . ) , node , node )

    )               shift and go to state 29


state 26

    (26) value -> digits . . digits
    (27) value -> digits .
    (9) digits -> digits . digit
    (11) digit -> . NUMBER

    .               shift and go to state 30
    )               reduce using rule 27 (value -> digits .)
    NUMBER          shift and go to state 28

    digit                          shift and go to state 31

state 27

    (10) digits -> digit .

    .               reduce using rule 10 (digits -> digit .)
    NUMBER          reduce using rule 10 (digits -> digit .)
    )               reduce using rule 10 (digits -> digit .)


state 28

    (11) digit -> NUMBER .

    .               reduce using rule 11 (digit -> NUMBER .)
    NUMBER          reduce using rule 11 (digit -> NUMBER .)
    )               reduce using rule 11 (digit -> NUMBER .)


state 29

    (1) result -> npwhere ( x [ idx ] comparison ( value ) . , node , node )

    ,               shift and go to state 32


state 30

    (26) value -> digits . . digits
    (9) digits -> . digits digit
    (10) digits -> . digit
    (11) digit -> . NUMBER

    NUMBER          shift and go to state 28

    digits                         shift and go to state 33
    digit                          shift and go to state 27

state 31

    (9) digits -> digits digit .

    .               reduce using rule 9 (digits -> digits digit .)
    NUMBER          reduce using rule 9 (digits -> digits digit .)
    )               reduce using rule 9 (digits -> digits digit .)


state 32

    (1) result -> npwhere ( x [ idx ] comparison ( value ) , . node , node )
    (2) node -> . result
    (3) node -> . leaf
    (1) result -> . npwhere ( x [ idx ] comparison ( value ) , node , node )
    (4) leaf -> . none
    (5) leaf -> . verylow
    (6) leaf -> . low
    (7) leaf -> . medium
    (8) leaf -> . high

    npwhere         shift and go to state 2
    none            shift and go to state 37
    verylow         shift and go to state 38
    low             shift and go to state 39
    medium          shift and go to state 40
    high            shift and go to state 41

    node                           shift and go to state 34
    result                         shift and go to state 35
    leaf                           shift and go to state 36

state 33

    (26) value -> digits . digits .
    (9) digits -> digits . digit
    (11) digit -> . NUMBER

    )               reduce using rule 26 (value -> digits . digits .)
    NUMBER          shift and go to state 28

    digit                          shift and go to state 31

state 34

    (1) result -> npwhere ( x [ idx ] comparison ( value ) , node . , node )

    ,               shift and go to state 42


state 35

    (2) node -> result .

    ,               reduce using rule 2 (node -> result .)
    )               reduce using rule 2 (node -> result .)


state 36

    (3) node -> leaf .

    ,               reduce using rule 3 (node -> leaf .)
    )               reduce using rule 3 (node -> leaf .)


state 37

    (4) leaf -> none .

    ,               reduce using rule 4 (leaf -> none .)
    )               reduce using rule 4 (leaf -> none .)


state 38

    (5) leaf -> verylow .

    ,               reduce using rule 5 (leaf -> verylow .)
    )               reduce using rule 5 (leaf -> verylow .)


state 39

    (6) leaf -> low .

    ,               reduce using rule 6 (leaf -> low .)
    )               reduce using rule 6 (leaf -> low .)


state 40

    (7) leaf -> medium .

    ,               reduce using rule 7 (leaf -> medium .)
    )               reduce using rule 7 (leaf -> medium .)


state 41

    (8) leaf -> high .

    ,               reduce using rule 8 (leaf -> high .)
    )               reduce using rule 8 (leaf -> high .)


state 42

    (1) result -> npwhere ( x [ idx ] comparison ( value ) , node , . node )
    (2) node -> . result
    (3) node -> . leaf
    (1) result -> . npwhere ( x [ idx ] comparison ( value ) , node , node )
    (4) leaf -> . none
    (5) leaf -> . verylow
    (6) leaf -> . low
    (7) leaf -> . medium
    (8) leaf -> . high

    npwhere         shift and go to state 2
    none            shift and go to state 37
    verylow         shift and go to state 38
    low             shift and go to state 39
    medium          shift and go to state 40
    high            shift and go to state 41

    node                           shift and go to state 43
    result                         shift and go to state 35
    leaf                           shift and go to state 36

state 43

    (1) result -> npwhere ( x [ idx ] comparison ( value ) , node , node . )

    )               shift and go to state 44


state 44

    (1) result -> npwhere ( x [ idx ] comparison ( value ) , node , node ) .

    $end            reduce using rule 1 (result -> npwhere ( x [ idx ] comparison ( value ) , node , node ) .)
    ,               reduce using rule 1 (result -> npwhere ( x [ idx ] comparison ( value ) , node , node ) .)
    )               reduce using rule 1 (result -> npwhere ( x [ idx ] comparison ( value ) , node , node ) .)

